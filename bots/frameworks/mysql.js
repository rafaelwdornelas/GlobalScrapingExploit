const checks = require('./src/checks')
const global = require('./src/functionsglobal')
const log = global.log;
var request = require("request");
const mysql = require('mysql2');
const connection = mysql.createConnection({
  host: '127.0.0.1',
  user: 'root',
  password: 'P@ssw0rdxinf3ctx',
  database: 'scrapingnode'
});



CapturaNovo()

async function CapturaNovo() {

	var dominio = await GET()

	if (dominio.rows[0] != undefined) {
		await Verifica(dominio.rows[0].domain)
	} else {

        //Aguarda 1 minuto
       await  global.sleep(60000)
    }

	CapturaNovo()

}

//Verifica("beauty321.com")



async function Verifica(line) {

	var url = line
    //escreve linha continua para separr cada site
    console.log('-'.repeat((process.stdout.columns/2)))

    log('URL: '+line.toUpperCase())
    
    identidade = await checks.identifica('https://'+line)

    if (identidade == 999) {
         identidade = await checks.identifica('http://'+line)
    }
    plataforma = await checks.identificador_title(identidade)

    log(line+" Plataforma: "+ plataforma  + ' [' + identidade + ']' ,2)

    var retorno = {"domain": url,"framework":identidade}
    await POST(retorno)

    return 

}



async function GET() {
  //Inicia uma promise para aguardar todo processo
        return new Promise(async function(resolve, reject){
            var sql = 'SELECT domain FROM domain where active = true AND framework is null order by RAND() limit 1;'
            connection.query(sql,function(err, results, fields) {
                resolve({'rows': results})// results contains rows returned by server
            });
        });
	
}

function POST(dados) {
  var sql = 'UPDATE domain SET framework=' +  dados.framework + " WHERE domain = '"+ dados.domain+ "';"
        console.log('FrameworkPOST', sql)
        connection.query(sql,function(err, results, fields) {
            //resolve({'rows': results}) // results contains rows returned by server
        });

        return {salvo: true}
}
