const BaseRoute = require('./baseRoute')
const Joi = require('joi')
const Boom = require('boom')
const Jwt = require('jsonwebtoken')
const databaseinfo = require('../db/databaseinfo')

class AuthRoutes extends BaseRoute {
    constructor(key, db) {
        super()
        this.secret = key
    }

    login() {

        return {
            path: '/login',
            method: 'POST',
            config: {
                auth: false,
                tags: ['api'],
                description: 'fazer login',
                notes: 'retorna o token',
                validate: {
                    payload: {
                        username: Joi.string().required(),
                        password: Joi.string().required()
                    }
                }
            },
            handler: async (request, headers) => {
                const {
                    username,
                    password
                } = request.payload

                var checkUser  = await databaseinfo.LoginCheckerUser(request.payload)

                if (checkUser.rowCount == 0) {
                    return Boom.unauthorized('O usuario informado nao existe')
                }

                if (password != checkUser.rows[0].password) {
                    return Boom.unauthorized('O usuario e senha invalidos!')
                }

                return {
                    token: Jwt.sign({exp: Math.floor(Date.now() / 1000) + (60 * 60 * 60 * 60),
                        username: username
                    }, this.secret)
                }
            }
        }
    }
}
module.exports = AuthRoutes